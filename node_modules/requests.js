var Player    = require('../public/player');
var responses = require('responses');

module.exports = {
  createLocalPlayer : function(simulation , message) {
    var player = simulation.addPlayer(message);
    
    simulation.sendTo(message.id , new responses['createLocalPlayer'](player));
    simulation.sendToAllExcept(message.id , new responses['createPlayer'](player));
  },
  
  velocityUpdate : function(simulation , message) {
    var player = simulation.findPlayerById(message.id);
    
    player.velocity = message.velocity;
    
    simulation.sendToAllExcept(message.id , new responses['velocityUpdate'](message.id , message.velocity));
  },
  
  updatePosition : function(simulation , message) {
    var player = simulation.findPlayerById(message.id);
    
    if (player.setPosition(message.position)) {
      simulation.sendToAllExcept(message.id , new responses['positionUpdate'](message.id , message.position));
    }
  },
  
  accelerationUpdate : function(simulation , message) {
    var player = simulation.findPlayerById(message.id);
    
    player.acceleration = message.acceleration;
    
    simulation.sendToAllExcept(message.id , new responses['accelerationUpdate'](message.id , message.acceleration));
  },
  
  fetchGroundTiles : function(simulation , message) {
    simulation.world.groundTiles.each(function(tile) {
      simulation.sendTo(message.id , new responses['fetchGroundTile'](tile));
    });
    
    simulation.sendTo(message.id , new responses['noMoreGroundTiles']());
  },
  
  fetchOtherPlayers : function(simulation , message) {
    simulation.eachPlayer(function(player) {
      if (player.id !== message.id) {
        simulation.sendTo(message.id , new responses['createPlayer'](player));
      }
    });
    
    simulation.sendTo(message.id , new responses['noMorePlayers']());
  }
}